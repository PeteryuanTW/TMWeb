@page "/ProcessRoute/{Process}"
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@inject TMWebShopfloorService shopfloorService
<div class="h-100">
    <DxStackLayout Orientation="Orientation.Vertical" ItemSpacing="2rem" CssClass="h-100">
        <Items>
            <DxStackLayoutItem Length="auto">
                <Template>
                    <div>
                        <div class="alert alert-secondary" role="alert">
                            <h2>@Process</h2>
                        </div>
                    </div>
                </Template>
            </DxStackLayoutItem>
            <DxStackLayoutItem>
                <Template>
                    <div class="h-100 d-flex align-items-center justify-content-around">
                        <ProcessRoutingComponent NavLink="@($"{Process}/StationAction")" IconName="station" Text="Station Dashboard"></ProcessRoutingComponent>
                        <ProcessRoutingComponent NavLink="@($"{Process}/MachineDashboard")" IconName="machine" Text="Machine Dashboard"></ProcessRoutingComponent>
                        @* <ProcessRoutingComponent IconName="map" Text="Map Dashboard"></ProcessRoutingComponent> *@
                    </div>
                </Template>
            </DxStackLayoutItem>
        </Items>
    </DxStackLayout>
</div>

@code {
    [Parameter]
    public string Process { get; set; }
    private string process = string.Empty;

    private List<string> processes = new();


    protected override async Task OnInitializedAsync()
    {
        processes = await shopfloorService.GetAllProcessName();
        process = Process;
    }

    private void SelectedNewProcess(string s)
    {
        //navigationManager.NavigateTo($"/ProcessRoute/{s}", true);
    }
}
