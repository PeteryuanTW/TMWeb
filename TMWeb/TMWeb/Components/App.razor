@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using System.Globalization
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims

@inject IFileVersionProvider FileVersionProvider

<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link href=@AppendVersion("css/bootstrap/bootstrap.min.css") rel="stylesheet" />

    <link href=@AppendVersion("_content/DevExpress.Blazor.Themes/bootstrap-external.bs5.min.css") rel="stylesheet" />


    @DxResourceManager.RegisterScripts()
    <link href=@AppendVersion("css/site.css") rel="stylesheet" />
    <link href=@AppendVersion("css/customcss/shopfloor.css") rel="stylesheet" />
    <link href=@AppendVersion("TMWeb.styles.css") rel="stylesheet" />
    <HeadOutlet />
</head>
<body>
    <Routes></Routes>
    <script src="_framework/blazor.web.js"></script>

    <script src="_content/BlazorMonaco/jsInterop.js"></script>
    <script src="_content/BlazorMonaco/lib/monaco-editor/min/vs/loader.js"></script>
    <script src="_content/BlazorMonaco/lib/monaco-editor/min/vs/editor/editor.main.js"></script>
</body>

</html>

@code{
    private string AppendVersion(string path) => FileVersionProvider.AddFileVersionToPath("/", path);

    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    protected override Task OnInitializedAsync()
    {
        HttpContext?.Response.Cookies.Append(
            CookieRequestCultureProvider.DefaultCookieName,
            CookieRequestCultureProvider.MakeCookieValue(
                new RequestCulture(
                    CultureInfo.CurrentCulture,
                    CultureInfo.CurrentUICulture)));
        return base.OnInitializedAsync();
    }
}