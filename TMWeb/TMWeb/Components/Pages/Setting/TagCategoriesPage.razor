@page "/TagCategories"
@rendermode InteractiveServer

<TagCategoriesSetting ActionCallback="@GetActionCallback"></TagCategoriesSetting>


@code {
    // IGrid? catGrid { get; set; }
    // private IEnumerable<TagCategory>? tagCategories;
    // private TagCategory? targetCat;
    // private bool catSelected => targetCat != null;


    // IGrid? tagGrid { get; set; }
    // private List<Tag> tags => catSelected ? targetCat.Tags.ToList() : new();
    // private Tag? targetTag;
    // private bool tagSelected => targetTag != null;


    // private bool catPopupVisible;
    // private bool tagPopupVisible;


    // private IEnumerable<ConnectionTypeWrapperClass> ConnectTypes => MachineTypeEnumHelper.GetConnectTypesWrapperClass();
    // private IEnumerable<DataTypeWrapperClass> DataTypes => MachineTypeEnumHelper.GetDataTypesWrapperClass();
    // private IEnumerable<SpecialTagTypeWrapperClass> SpecialTagTypes => TypeEnumHelper.GetSpecialTagTypesWrapperClass();

    // private bool showTagDetails = false;
    // private ButtonRenderStyle detailStyle => showTagDetails ? ButtonRenderStyle.Info : ButtonRenderStyle.Secondary;

    // protected override async Task OnInitializedAsync()
    // {
    //     await InitParameter();
    //     await base.OnInitializedAsync();
    // }

    // private async Task InitParameter()
    // {
    //     tagCategories = await shopfloorService.GetAllTagCategoriesWithTags();
    // }

    // #region UI
    // private void CatSelected(GridFocusedRowChangedEventArgs args)
    // {
    //     targetCat = args.DataItem as TagCategory;
    // }

    // private void TagSelected(GridFocusedRowChangedEventArgs args)
    // {
    //     targetTag = args.DataItem as Tag;
    // }

    // private void ShowCatPopup()
    // {
    //     catPopupVisible = true;
    // }

    // private async void CloseCatPopup()
    // {
    //     catPopupVisible = false;
    //     await InitParameter();
    // }


    // private void NewCatClicked()
    // {
    //     GenrateNewCat();
    //     ShowCatPopup();
    // }

    // private void NewTagClicked()
    // {
    //     GenrateNewTag();
    //     ShowTagPopup();
    // }

    // private void ShowCatDelete()
    // {
    //     catGrid?.ShowDataItemDeleteConfirmation(targetCat);
    // }

    // private void ShowTagDelete()
    // {
    //     tagGrid.ShowDataItemDeleteConfirmation(tagSelected);
    // }

    // private void ShowTagPopup()
    // {
    //     tagPopupVisible = true;
    // }

    // private void SwitchTagDeatilVisible()
    // {
    //     showTagDetails = !showTagDetails;
    // }

    // private async void CloseTagPopup()
    // {
    //     tagPopupVisible = false;
    //     await InitParameter();
    // }


    // #endregion


    // #region category

    // private void GenrateNewCat()
    // {
    //     targetCat = new TagCategory(Guid.NewGuid());
    // }

    // private async Task UpsertTagCategory()
    // {
    //     var res = await shopfloorService.UpsertTagCategory(targetCat);
    //     CloseCatPopup();
    //     uiService.ShowToast(res);
    // }



    // private async Task DeleteTagCategory()
    // {
    //     var res = await shopfloorService.DeleteTagCategory(targetCat);
    //     await InitParameter();
    //     uiService.ShowToast(res);
    // }



    // #endregion

    // #region tag

    // private void GenrateNewTag()
    // {
    //     targetTag = new Tag(targetCat.Id);
    // }

    // private async Task UpsertTag()
    // {
    //     var res = await shopfloorService.UpsertTag(targetTag);
    //     await InitParameter();
    //     CloseTagPopup();
    //     uiService.ShowToast(res);
    // }



    // private async Task DeleteTag()
    // {
    //     var res = await shopfloorService.DeleteTag(targetTag);
    //     await InitParameter();
    //     uiService.ShowToast(res);
    // }

    // #endregion
    private void GetActionCallback(RequestResult res)
    {
        uiService.ShowToast(res);
    }
}
