@page "/Workorder/{Workorderid}"
@rendermode InteractiveServer

@if (hasWorkorder)
{
    <div class="p-3 h-100">
        <DxGridLayout ColumnSpacing="1rem" RowSpacing="1rem">
            <Rows>
                <DxGridLayoutRow Height="4fr"/>
                <DxGridLayoutRow Height="8fr"/>
            </Rows>
            <Columns>
                <DxGridLayoutColumn Width="4fr"/>
                <DxGridLayoutColumn Width="4fr"/>
                <DxGridLayoutColumn Width="4fr"/>
            </Columns>
            <Items>
                <DxGridLayoutItem Row="0" Column="0" RowSpan="2">
                    <Template>
                        <DxFormLayout CssClass="card p-3 h-100">
                            <DxFormLayoutTabPages>
                                <DxFormLayoutTabPage Caption="@($"{localizer["Detail"]}")">
                                    <DxFormLayoutItem ColSpanLg="12" Caption="@($"{localizer["Basic Info"]}")" CaptionPosition="CaptionPosition.Horizontal">
                                        <hr>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["Process"]}")" CaptionPosition="CaptionPosition.Vertical" BeginRow="true">
                                        <DxTextBox Text="@workorder.Process.Name" ReadOnly="true"></DxTextBox>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["Workorder"]}")" CaptionPosition="CaptionPosition.Vertical">
                                        <DxTextBox Text="@workorder.WorkorderNo" ReadOnly="true"></DxTextBox>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["Lot"]}")" CaptionPosition="CaptionPosition.Vertical">
                                        <DxTextBox Text="@workorder.Lot" ReadOnly="true"></DxTextBox>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["Status"]}")" CaptionPosition="CaptionPosition.Vertical">
                                        <DxTextBox Text="@(((WorkorderStatus)workorder?.Status).ToString())" ReadOnly="true"></DxTextBox>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["Part"]}")" CaptionPosition="CaptionPosition.Vertical">
                                        <DxTextBox Text="@workorder.PartNo" ReadOnly="true"></DxTextBox>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["Target"]}")" CaptionPosition="CaptionPosition.Vertical">
                                        <DxSpinEdit Value="@workorder.TargetAmount" ReadOnly="true"></DxSpinEdit>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["OK"]}")" CaptionPosition="CaptionPosition.Vertical">
                                        <DxSpinEdit Value="@workorder.Okamount" ReadOnly="true"></DxSpinEdit>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="@($"{localizer["NG"]}")" CaptionPosition="CaptionPosition.Vertical">
                                        <DxSpinEdit Value="@workorder.Ngamount" ReadOnly="true"></DxSpinEdit>
                                    </DxFormLayoutItem>
                                    @if (workorder.HasRecipe)
                                    {
                                        <DxFormLayoutItem Caption="@($"{localizer["Recipe"]}")" CaptionPosition="CaptionPosition.Vertical" BeginRow="true">
                                            <DxTextBox Text="@workorder.RecipeCategory?.RecipeCategory" ReadOnly="true" />
                                        </DxFormLayoutItem>
                                    }
                                    @if (workorder.HasWorkorderRecord)
                                    {
                                        <DxFormLayoutItem Caption="@($"{localizer["Workorder Record"]}")" CaptionPosition="CaptionPosition.Vertical">
                                            <DxTextBox Text="@workorder.WorkorderRecordCategory?.WorkorderRecordCategory" ReadOnly="true"></DxTextBox>
                                        </DxFormLayoutItem>
                                    }
                                    @if (workorder.HasItemRecord)
                                    {
                                        <DxFormLayoutItem Caption="@($"{localizer["Item Record"]}")" CaptionPosition="CaptionPosition.Vertical">
                                            <DxTextBox Text="@workorder.ItemRecordsCategory?.ItemRecordCategory" ReadOnly="true"></DxTextBox>
                                        </DxFormLayoutItem>
                                    }
                                    @if (workorder.HasTaskRecord)
                                    {
                                        <DxFormLayoutItem Caption="@($"{localizer["Task Record"]}")" CaptionPosition="CaptionPosition.Vertical">
                                            <DxTextBox Text="@workorder.TaskRecordCategory?.TaskRecordsCategory" ReadOnly="true"></DxTextBox>
                                        </DxFormLayoutItem>
                                    }
                                    @if (workorder.HasWorkorderRecord && workorder.WorkorderRecordIncluded)
                                    {
                                        <DxFormLayoutItem ColSpanLg="12" Caption="@(workorder.WorkorderRecordCategory?.WorkorderRecordCategory)" CaptionPosition="CaptionPosition.Horizontal">
                                            <hr>
                                        </DxFormLayoutItem>
                                        @foreach (var workorderRecordDetail in workorderRecordDetails)
                                        {
                                            <DxFormLayoutItem Caption="@(workorderRecordDetail.RecordContent.RecordName)" CaptionPosition="CaptionPosition.Vertical">
                                                <DxTextBox Text="@workorderRecordDetail.Value" ReadOnly="true"></DxTextBox>
                                            </DxFormLayoutItem>
                                        }
                                    }
                                    <DxFormLayoutItem ColSpanLg="12">
                                        <hr>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem>
                                        <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained" SizeMode="SizeMode.Large">
                                            <DxToolbarItem IconCssClass="oi oi-media-play" Click="StartWorkorder" RenderStyle="@ButtonRenderStyle.Success" BeginGroup="true" />
                                            <DxToolbarItem IconCssClass="oi oi-media-stop" RenderStyle="@ButtonRenderStyle.Danger" BeginGroup="true" />
                                        </DxToolbar>
                                    </DxFormLayoutItem>
                                </DxFormLayoutTabPage>
                                @if (workorder.HasRecipe && workorder.RecipeIncluded)
                                {
                                    <DxFormLayoutTabPage Caption="@($"{localizer["Recipe"]}")">

                                        @foreach (var recipe in workorder.RecipeCategory?.Recipes)
                                        {
                                            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" BeginRow="true" ColSpanLg="1">
                                                <DxCheckBox Checked="@(recipe.GetValueString(workorder).Item1)" ReadOnly="true"></DxCheckBox>
                                            </DxFormLayoutItem>
                                            <DxFormLayoutItem Caption="@recipe.RecipeItemName" CaptionPosition="CaptionPosition.Vertical" ColSpanLg="11">
                                                <DxTextBox Text="@(recipe.GetValueString(workorder).Item2)" ReadOnly="true"></DxTextBox>
                                            </DxFormLayoutItem>
                                        }
                                        <DxFormLayoutItem ColSpanLg="12">
                                            <hr>
                                        </DxFormLayoutItem>
                                        <DxFormLayoutItem>
                                            <DxButton Text="Deploy Recipes" Click="DeployRecipes" />
                                        </DxFormLayoutItem>
                                    </DxFormLayoutTabPage>
                                }
                                @if (workorder.HasItemRecord && workorder.ItemRecordIncluded)
                                {
                                    <DxFormLayoutTabPage Caption="@($"{localizer["Item Record"]}")">

                                        @foreach (var itemRecord in workorder.ItemRecordsCategory?.ItemRecordContents)
                                        {
                                            <DxFormLayoutItem>
                                                <DxTextBox Text="@itemRecord.RecordName"></DxTextBox>
                                            </DxFormLayoutItem>
                                        }

                                    </DxFormLayoutTabPage>
                                }
                                @if (workorder.HasTaskRecord && workorder.TaskRecordIncluded)
                                {
                                    <DxFormLayoutTabPage Caption="@($"{localizer["Task Record"]}")">

                                        @foreach (var taskRecord in workorder.TaskRecordCategory?.TaskRecordContents)
                                        {
                                            <DxFormLayoutItem>
                                                <DxTextBox Text="@taskRecord.RecordName"></DxTextBox>
                                            </DxFormLayoutItem>
                                        }

                                    </DxFormLayoutTabPage>
                                }

                            </DxFormLayoutTabPages>
                        </DxFormLayout>
                    </Template>
                </DxGridLayoutItem>
                <DxGridLayoutItem Row="0" Column="1">
                    <Template>
                        <div class="w-100 h-100 p-3">
                            <MachinesSummaryDonut Machines="@machines"></MachinesSummaryDonut>
                        </div>
                    </Template>
                </DxGridLayoutItem>
                <DxGridLayoutItem Row="0" Column="2">
                    <Template>
                        <div class="w-100 h-100 p-3">
                            <StationsSummaryDonut Stations="@stations"></StationsSummaryDonut>
                        </div>
                    </Template>
                </DxGridLayoutItem>
            </Items>
        </DxGridLayout>
    </div>
}


@code {

    [Parameter]
    public string Workorderid { get; set; }

    private Workorder? workorder;

    private bool hasWorkorder => workorder != null;

    // private IEnumerable<Process> processes;
    // private IEnumerable<WorkorderRecipeConfig> workorderRecipeConfigs;
    // private IEnumerable<WorkorderRecordConfig> workorderRecordConfigs;
    // private IEnumerable<ItemRecordConfig> itemRecordConfigs;
    // private IEnumerable<TaskRecordConfig> taskRecordConfigs;
    private IEnumerable<WorkorderRecordDetail> workorderRecordDetails;

    IEnumerable<Machine> machines;
    IEnumerable<Station> stations;

    protected override async Task OnInitializedAsync()
    {
        await GetParameter();
    }

    private async Task GetParameter()
    {
        await GetWorkorderDetail();
        await GetMachinesInProcess();
        await GetStationsInProcess();
    }

    private async Task GetWorkorderDetail()
    {
        workorder = await shopfloorService.GetWorkordersDetailsForConfig(new Guid(Workorderid));
        workorderRecordDetails = await shopfloorService.RetriveOrGenerateWorkorderRecordContent(workorder, workorder.WorkorderRecordCategoryId);
    }

    private async Task GetMachinesInProcess()
    {
        if (hasWorkorder)
        {
            machines = await shopfloorService.GetMachineByProcessID(workorder?.ProcessId);
        }
    }

    private async Task GetStationsInProcess()
    {
        if (hasWorkorder)
        {
            stations = await shopfloorService.GetStationsByProcessID(workorder?.ProcessId);
        }
    }

    private async Task StartWorkorder()
    {

        var res =  await shopfloorService.StartWorkorderByID(workorder.Id);
        uiService.ShowToast(res);
    }

    private async Task DeployRecipes()
    {
        var res = await shopfloorService.DeployWorkorderRecipeInProcess(workorder);
        uiService.ShowToast(res);
    }
}
