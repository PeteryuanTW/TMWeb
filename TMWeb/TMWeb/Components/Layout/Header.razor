@rendermode InteractiveServer
@inherits AuthComponentBase
@inject IStringLocalizer<Language> localizer
@inject NavigationManager nav

<ToastComponent />

<div class="card p-2 " style="margin:1rem">
    <DxMenu Orientation="Orientation.Horizontal"
            DropDownActionMode="MenuDropDownActionMode.Click"
            DisplayMode="MenuDisplayMode.Desktop"
            CollapseItemsToHamburgerMenu="true"
            CollapseItemToIconMode="MenuCollapseItemToIconMode.All">
        <TitleTemplate>
            <DxButton RenderStyle="ButtonRenderStyle.None" Text="@($"{localizer["Service"]}")"></DxButton>
        </TitleTemplate>
        <Items>
            <DxMenuItem Position="ItemPosition.Center" Text="@($"{localizer["Shopfloor"]}")" IconCssClass="oi oi-list">
                <Items>
                    <DxMenuItem Text="@($"{localizer["Process"]}")" IconCssClass="oi oi-ellipses" NavigateUrl="/Process" />
                    <DxMenuItem Text="@($"{localizer["Workorder"]}")" IconCssClass="oi oi-clipboard" NavigateUrl="/WorkordersGrid" />
                </Items>
            </DxMenuItem>
            <DxMenuItem Position="ItemPosition.Center" Text="@($"{localizer["Machine"]}")" IconCssClass="oi oi-laptop" BeginGroup="true" />
            <DxMenuItem Position="ItemPosition.Center" Text="@($"{localizer["Tag"]}")" IconCssClass="oi oi-tags" />
            <DxMenuItem Position="ItemPosition.Center" Text="@($"{localizer["Map"]}")" IconCssClass="oi oi-map">
                <Items>
                    <DxMenuItem Text="@($"{localizer["Image"]}")" IconCssClass="oi oi-image" NavigateUrl="/ImageUpload" />
                    <DxMenuItem Text="@($"{localizer["List"]}")" IconCssClass="oi oi-list" NavigateUrl="/MapsGrid" />
                </Items>
            </DxMenuItem>
            <DxMenuItem Position="ItemPosition.Center" Text="@($"{localizer["Setting"]}")" IconCssClass="oi oi-cog" NavigateUrl="/Setting" BeginGroup="true"></DxMenuItem>

            <DxMenuItem Position="ItemPosition.Center" Text="@($"{localizer["Developer"]}")" IconCssClass="oi oi-peosple" BeginGroup="true">
                <Items>
                    <DxMenuItem Text="@($"{localizer["Command"]}")" IconCssClass="oi oi-terminal" NavigateUrl="/Developer" />
                    <DxMenuItem Text="@($"{localizer["Swagger"]}")" IconCssClass="oi oi-wrench" NavigateUrl="/Swagger" />
                    <DxMenuItem Text="@($"{localizer["Modbus TCP"]}")" IconCssClass="oi oi-tablet" NavigateUrl="/ModbusTCPTesting" />
                </Items>
            </DxMenuItem>


            <AuthComponent></AuthComponent>
            @* <DxMenuItem Position="ItemPosition.End">
            <Template>
            <div class="h-100 d-flex flex-wrap justify-content-center align-content-center">
            <div>
            <AuthComponent></AuthComponent>
            </div>
            </div>
            </Template>
            </DxMenuItem> *@
        </Items>
    </DxMenu>
</div>

@code {
    // private CultureInfo[] supportedCultures = new[]
    // {
    //     new CultureInfo("zh-TW"),
    //     new CultureInfo("en-US"),
    // };

    // private CultureInfo? selectedCulture;

    // protected override Task OnInitializedAsync()
    // {
    //     selectedCulture = CultureInfo.CurrentCulture;
    //     return base.OnInitializedAsync();
    // }

    // private async Task ApplySelectedCultureAsync(CultureInfo cultureInfo)
    // {
    //     if (CultureInfo.CurrentCulture != cultureInfo)
    //     {
    //         selectedCulture = cultureInfo;
    //         var uri = new Uri(nav.Uri)
    //             .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
    //         var cultureEscaped = Uri.EscapeDataString(selectedCulture.Name);
    //         var uriEscaped = Uri.EscapeDataString(uri);

    //         nav.NavigateTo(
    //             $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
    //             forceLoad: true);
    //     }
    // }


}
