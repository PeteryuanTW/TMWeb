using System;
using System.Threading.Tasks;
using System.Collections.Generic;

using TMWeb.EFModels;

using TMWeb.Services;
using TMWeb.Scripts.Template;

namespace TMWeb.Scripts.Source
{
    public class FuncConf
    {
        public bool working {get; set;}
        public string stationName {get; set;}
        public string tagName {get; set;}

    }


    public class Test : ScriptBaseClass
    {
        public Test(TMWebShopfloorService tmWebShopfloorService):base(tmWebShopfloorService)
        {
            
        }
        //private bool workingTag1 = false;
        //private bool workingTag2 = false;

        private int amount = 0;
        private Queue<string> q = new Queue<string>();

        public override async void OnStart()
        {
            //funConf = new List<FuncConf>()
            //{
            //    new FuncConf(){working = workingTag1, stationName = "測試工站1", tagName = "S1作業中"},
            //    new FuncConf(){working = workingTag2, stationName = "測試工站2", tagName = "S2作業中"},
            //};
            amount = 0;
            q = new Queue<string>();
        }
        
        public override async Task RunAction()
        {
            Tag? newItem = await tmWebShopfloorService.GetMachineTag("本機測試", "pass");
            if(newItem is not null)
            {
                if(Convert.ToBoolean(newItem.Value))
                {
                    string s = DateTime.Now.ToString("yyyyMMddHHmmss");
                    q.Enqueue(s);
                    await tmWebShopfloorService.StationInByNameAndSerialNo("堆棧站", s);
                    await tmWebShopfloorService.SetMachineTag("本機測試", "pass", false);
                }
            }

            Tag? amountTag = await tmWebShopfloorService.GetMachineTag("本機測試", "amount");
            if(newItem is not null)
            {
                int current = Convert.ToInt32(amountTag.Value);
                if(current>amount)
                {
                    int a = current - amount;
                    for(int i = 0; i< a; i++)
                    {
                        string ss = q.Dequeue();
                        await tmWebShopfloorService.StationOutByFIFO("堆棧站", true);
                    }
                }
                amount = current;
            }

            
            
        }
        
        public override void OnStop()
        {
            
        }
    }
};